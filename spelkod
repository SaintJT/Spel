import random as rand
import sys
import time


class player_role():                        #Spelarens klass, ger värden på hp, attack skada, level, spelar klass
    def __init__(self, role, lvl, hp, max_hp, damage):
        self.role = role
        self.lvl = lvl
        self.hp = hp
        self.max_hp = max_hp
        self.damage = damage


class monster():                            #Skapar monster som funkar i princip det samma som spelaren förutom level
    def __init__(self, name, damage, hp, max_hp):
        self.name = name
        self.damage = damage
        self.hp = hp
        self.max_hp = max_hp


class path():                           #ger ett random adjektiv som beskrive vägarna
    def __init__(self, adjective):
        self.adjective = adjective


class Item:
    def __init__(self, amount, name, description, damage, hp, item_max_hp):
        self.amount = amount
        self.name = name
        self.description = description
        self.damage = damage
        self.hp = hp
        self.max_hp = item_max_hp


class Inventory:
    def __init__(self):
        self.items = []

    def add_item(self, item):
        self.items.append(item)
        print_slow(f"**You acquired {item.name}.** \n")

    def display_inventory(self, player, player_inventory):
        if not self.items:
            print_slow("Your inventory is empty.")
        else:
            print_slow("Inventory:")
            for item in self.items:
                print_slow(f"- {item.amount} {item.name}: {item.description}")
                item_use = input(f"\nWould you like to use {item.name}? \n [y/n] \n")
                if item_use == "yes" or item_use == "y":
                    use_item(player, item, player_inventory)
                else:
                    print_slow("**No item was used**\n")

    def remove_item(self, item):
        if item in self.items:
            self.items.remove(item)



def use_item(player, item, player_inventory):           #uppdaterar spelarens stats baserat på vilket föremål som användes
    player.hp += item.hp
    player.damage += item.damage
    player.max_hp += item.max_hp
    player_inventory.remove_item(item)
    input(f"""\n**You succesfully used {item.name}**
press "enter" to continue\n""")
    
    return player.hp and player.damage


def print_slow(text):           #funktion som får texten att printas bokstav efter bokstav 
    for letter in text:
        sys.stdout.write(letter)
        sys.stdout.flush()
        time.sleep(0.03)


def user(username):                 #spelaren väljer klass
    while True:
        class_choice = input("""
                            Please select a class:
                        1. Knight           2. Samurai
                        3. Viking           4. Class stats
            """)

        if class_choice == "1":
            player = player_role("Knight", 1, 20, 20, 15)
            print_slow(f"Welcome brave Knight {username}, hm Knight {username} sure has a very nice ring to it \n")
            break
        elif class_choice == "2":
            player = player_role("Samurai", 1, 15, 15, 15)
            print_slow(f"Welcome brave Samurai {username}, i get the feeling that the name Samurai {username} will bring peace to all of the lands \n")
            break
        elif class_choice == "3":
            player = player_role("Viking", 1, 12, 12, 25)
            print_slow(f"Welcome Viking {username}, i can tell that you are a fierce warrior of the sea. \n")
            break
        elif class_choice == "4":
            print("""
                Knights protect the King's castle. Their sturdy and durable armor protects them from attacks
                but their blunt swords don't deal as much damage:

                hp = 20
                Atk_Dmg = 10
                -------------------------------------------------------------
                The Samurai are a prestigious rank of royal guard. Through their meditation and diligent hard work
                they have achieved perfect balance in the art of war.


                hp = 15
                Atk_Dmg = 15
                ------------------------------------------------------------------
                Vikings are the berserk warriors of the north and have superhuman strength.
                However, because of their sheer size they don't fit in any armor:

                hp = 10
                Atk_Dmg = 20
                """)
        else:
            print_slow("Please select user class")

    return player


def explore(player, username, hp_potion, atk_amulet, good_luck, player_inventory):         #genererar en random outcome och sätter odds på vilken event som ska ske

    adjective = ["Enchanted", "Moss-covered", "Twisting", "Illuminated", "Ancient", "Mystical", "Whispering",
                 "Moonlit", "Secretive", "Overgrown", "Serpentine", "Hidden", "Tranquil", "Arcane", "Spiraled",
                 "Mysterious", "Ephemeral", "Radiant", "Otherworldly", "Luminous", "Haunting", "Celestial",
                 "Winding", "Ethereal", "Fabled", "Elusive", "Dreamlike"]

    door1 = path(rand.choice(adjective))
    door2 = path(rand.choice(adjective))
    door3 = path(rand.choice(adjective))

    while True:
        
        door_choice = input(
            f"""
                                    Three paths lay ahead. Pick your poison:
                1. {door1.adjective} left path    2. {door2.adjective} middle path      3. {door3.adjective} right path 
            """)
        if door_choice == "1":
            print_slow(f"You chose the {door1.adjective} left path. \n")
            break

        elif door_choice == "2":
            print_slow(f"You chose the {door2.adjective} middle path. \n")
            break
        elif door_choice == "3":
            print_slow(f"You chose the {door3.adjective} right path. \n")
            break
        else:
            print_slow("Invalid choice. You stand still and contemplate your decisions.")

    random_event = rand.randint(1, 100)
    if random_event >= 1 and random_event < 10:
        fountain_of_youth(player)           #kallar på fountain of youth()

    elif random_event >= 10 and random_event < 70:
        handle_event("Monster Fight", username, player, hp_potion, atk_amulet, good_luck, player_inventory)         #kallar på handle event() där event = monster fight 
    else:
        handle_event("Chest", username, player, hp_potion, atk_amulet, good_luck, player_inventory)




def handle_event(event, username, player, hp_potion, atk_amulet, good_luck, player_inventory):         #Startar event som väljs i explore() 
    chest = None
    if event == "Monster Fight":
        print_slow("A wild monster appears! Prepare for battle!\n")
        monster_fight(player, username, hp_potion, atk_amulet, good_luck, player_inventory)             #kör monster fight()
    elif event == "Chest":
        chest = input("Oh! you see a chest, will you open it?\n")
    elif event == "Fountain of Youth":
        fountain_of_youth(player)

    else:
        input("""You stumbled into an empty room. You scratch your head and continue your journey.
            Press "Enter" to continue \n""")

    if chest == "y" or chest == "yes":
        chest_event(player, hp_potion, atk_amulet, good_luck, player_inventory)
    elif chest == "n" or chest == "no":
        input("""???? the chest dissapeared....
press "enter" to continue""")


def chest_event(player, hp_potion, atk_amulet, good_luck, player_inventory):               #random outcome, man kan ta skada, hitta ett föremål (hp potion, atk amulet) eller så händer inget
    chest_outcome = rand.randint(1,100)
    if chest_outcome >= 1 and chest_outcome < 50:
        print_slow("**You found an item inside the chest!** \n")
        random_item = rand.randint(1,100)
        if random_item >= 50 and random_item < 70:
            player_inventory.add_item(hp_potion)
        elif random_item >= 70 and random_item < 80:
            player_inventory.add_item(atk_amulet)
        else:
            player_inventory.add_item(good_luck)

    elif chest_outcome >= 50 and chest_outcome <75:
        print_slow("**Oh no! The chest was a trap. You took 5 dmg** \n")
        player.hp -= 5
        if player.hp <= 0:
            print("....**The chest killed you**.....")
            exit()
    else:
        print_slow("**The chest won't budge, you continue with your quest** \n")

def attack_monster(player, spawn_monster):
    if player.hp >= 0:
        player_attack = rand.randint(5, player.damage)
        spawn_monster.hp -= player_attack
        print_slow(f"**You attacked the {spawn_monster.name} for {player_attack} damage!**\n")

    if spawn_monster.hp >= 0:
                monster_attack = rand.randint(5, spawn_monster.damage)
                player.hp -= monster_attack
                print_slow(f"**The {spawn_monster.name} attacks you for {monster_attack} damage!**\n")            #separata funktioner så att ifall spelaren dödar monstret så kan monstret inte attackera tillbaka
    
def monster_stats(spawn_monster):
    print_slow(f"""
{spawn_monster.name}:
{spawn_monster.damage}
{spawn_monster.hp}/{spawn_monster.max_hp}
""")
    
def monster_fight(player, username, hp_potion, atk_amulet, good_luck, player_inventory):
    monster_name = ["Hoard of goblins", "Skeleton", "Zombie", "Orc", "Troll", "Oni", "Medusa", "Ghoul", "Minotaur",
                    "Mimic", "Banshee", "Wraith", "lich", "Wyvern", "slime", "Orochi"]
    spawn_monster_max_hp = rand.randint(10, 35)
    spawn_monster_atk = rand.randint(5, 15)
    spawn_monster = monster(rand.choice(monster_name), spawn_monster_atk, spawn_monster_max_hp, spawn_monster_max_hp)
    print_slow(f"**You encountered a {spawn_monster.name} {spawn_monster_max_hp}/{spawn_monster_max_hp}**\n")

    while player.hp > 0 and spawn_monster.hp > 0:
        player_choice = input(
            """
                                 What do you want to do young hero?
                        1. Attack                                2. Check inventory
                        3. Hero stats                            4. Run away
                                        5. Inspect monster
                """
        )

        if player_choice == "1":
            attack_monster(player, spawn_monster)
        elif player_choice == "2":
            player_inventory.display_inventory(player, player_inventory)
        elif player_choice == "3":
            stats(player, username)
        elif player_choice == "4":
            print_slow(
                """ 
                You coward!! 
                Never step foot in this land again, live in shame for the rest of your life!   
                *You have been exiled*
            """
            )
            exit()
        elif player_choice =="5":
            monster_stats(spawn_monster)
        else:
            print_slow("**Enter valid input**")

        if spawn_monster.hp <= 0:
            player.lvl += 1
            print_slow(f"**You defeated the {spawn_monster.name}!**\n")
            print_slow(f"{player.role} {username} has reached lvl {player.lvl}\n")
            random_item = rand.choice((hp_potion, atk_amulet, good_luck))
            player_inventory.add_item(random_item)
            break

        if player.hp <= 0:
            print_slow(f"The {spawn_monster.name} has defeated you, Game over")
            break



def fountain_of_youth(player):          #event som ger spelare mer hp
    player.hp = min(player.hp + 15, player.max_hp)
    player.max_hp += 10
    print_slow("You discover a magical fountain of youth. Drink from it to restore your health\n")
    print_slow("""
    **You took a rejuvenating sip from the magical fountain and it restored 15hp**
          """)

def attack_boss(player, Demon_Lord):        #gjorde en separat funktion så att man attakerar bossen bara om man väljer att göra det
        player_attack = rand.randint(5, player.damage)
        Demon_Lord.hp -= player_attack
        print_slow(f"**You attacked the {Demon_Lord.name} for {player_attack} damage!**\n")

        Demon_Lord_attack = rand.randint(1, 20)
        player.hp -= Demon_Lord_attack
        print_slow(f"**The Demon lord attacks you for {Demon_Lord_attack} damage!**\n")


def stats(player, username):        #printar splearens status
    print_slow(f"""
{player.role}  {username}: lvl {player.lvl}
Current hp is: {player.hp}/{player.max_hp}
Atk dmg is: {player.damage}
""")
    input("""press "enter" to continue...""")

def demon_lord_stats(Demon_Lord):
    print_slow(f"""
{Demon_Lord.name}:
{Demon_Lord.damage}
{Demon_Lord.hp}/{Demon_Lord.max_hp}
""")

def end(player, username, player_inventory, Demon_Lord):        #end funktion som avslutar spelet och spawnar bossen
    print_slow("""***The cave starts shaking***\n""")
    print_slow("***A screaching sound echoes through the thick walls***\n")
    print_slow("***The demon king has been summond***\n")
    print_slow("""-Mohahaha finally i've made it through the barrier into the realm of the mortals!...
-Oh! I see someone's prepared a little warm up fight for me haha...
-It's been ages since i fought, you seem worthy enough to be my first opponment...
-Bring it!!\n """)
    
  

    while player.hp >= 0 and Demon_Lord.hp >= 0:
        boss_fight = input(
            """
                                    What do you want to do young hero?
                        1. Attack                                2. Check inventory
                        3. Hero stats                            4. Run away
                                        5. Inspect Demon Lord
                """
        )

        if boss_fight == "1":
            attack_boss(player, Demon_Lord)
        elif boss_fight == "2":
            player_inventory.display_inventory(player, player_inventory)
        elif boss_fight == "3":
            stats(player, username)
        elif boss_fight == "4":
            print_slow(
                """ 
                You coward!! 
                Never step foot in this land again, live in shame for the rest of your life!   
                *You have been exiled*
            """
            )
            exit()
        elif boss_fight == "5":
            demon_lord_stats(Demon_Lord)
        else:
            print_slow("**Enter valid input**")



    if player.hp <= 0:
        print_slow("The demon lord got the best of you, Try again?...\n")
        exit()
    
    if player.hp > 0 and Demon_Lord.hp <= 0:
        print_slow("""***YOU HAVE DEFEATED THE GREAT DEMON LORD***\n""")
        print_slow(f"""Welcome back {player.role} {username}! I sense that the disturbance has dissappeared, i assume this was you? 
You also seem to have grown quite a bit stronger since our last encounter! Thanks to your assistance the number 
of monsters has severly decreased and our food supplies have never been richer. As promised we have prepared a feast 
and a grand fortune for you. 
Thank you from me and every citizen of the land of Bennäts!""")
        exit()
    return Demon_Lord

def main():         #main funktionen kallar på alla andra funktioner och loopar spelet tills spelaren når level 10
    hp_potion = Item(1, "Health Potion", "A mystical white drink, believed to be filled with water taken from the fountain of youth. + 10hp\n", 0, 10, 5)
    atk_amulet = Item(1, "Atk Amulet", "A shiny gem on a silver locket that gives additional strength + 10 atk dmg\n", 10, 0, 0)            #definerar föremålen som kan droppas
    good_luck = Item(1, "Good Luck charm", "It has it's charming looks but that's it", 0, 0, 0)
    player_inventory = Inventory()          #lista som är spelarens ryggsäck
    Demon_Lord = monster("Demon Lord", 20, 100,100)

    

    while True:         #while loop som ser till att spelet inte fortsätter föräns spelaren anger ett valid input
        username = input("Select username young adventurer: \n")

        print_slow(f"\nSo you are {username}? \n")

        answer_name = input("""[y/n] \n""")

        if answer_name == "y" or answer_name == "yes":
            print_slow(f"""Welcome to the land of Bennäts young {username}! We have summoned you to the lord's castle to request 
a favor from you. The dungeon near Pipp village has been infested with the demon lord's minions 
and this has caused the townsfolk great panic! Are you willing to check out the root of the problem?
Of course, you will be compensated greatly!\n""")
            start = input("\nAre you willing to help?\n")
            break
        elif answer_name == "n" or answer_name == "no":
            print_slow("Then what is your name?\n")
        else:
            print_slow("\nPlease answer using y for yes and n for no \n")

    while True:
        if start == "y" or start == "yes":
            print_slow("\nGreat choice, if you make it out in one piece you will live a life of prosperity\n")
            break
        elif start == "n" or start == "no":
            print_slow("Then why are you playing this game? *You have been banished, coward*")
            exit()
        else:
            start = input("Please enter valid input (y/n): ")

    player = user(username)             #skapar ett objekt med värdena som returnas av user() 

    while player.hp > 0 and player.lvl < 10:            #while loop som spelas om tills spelaren dör eller når lvl 10
        user_choice = input(
            """
                                    What do you want to do young hero?
                        1. Enter deeper into the cave            2. Check inventory
                        3. Hero stats                            4. Run away
                """
        )

        if user_choice == "1":              #kör en funktion baserat på spelarens val
            explore(player, username, hp_potion, atk_amulet, good_luck, player_inventory)        
        elif user_choice == "2":
            player_inventory.display_inventory(player, player_inventory)
        elif user_choice == "3":
            stats(player, username)
            input()
        elif user_choice == "4":
            print_slow(
                """ 
                You coward!! 
                Never step foot in this land again, live in shame for the rest of your life!   
                *You have been exiled*
            """
            )
            exit() 
        else:
            print_slow("**Enter valid input**")

    if player.hp >= 0 and player.lvl == 10:         #när spelaren når level 10 spelas slut funktionen
        while True:
            ending = input("Are you ready to fight the boss?\n")
            if ending == "y" or ending == "yes":
                end(player, username, player_inventory, Demon_Lord)
            else:
                print_slow("Too bad get in there \n")
                end(player, username, player_inventory, Demon_Lord)
    return Demon_Lord           #gör det möjligt att skicka Demon_Lord till andra funktioner

main()              #kallar på main() så att spelet startas
